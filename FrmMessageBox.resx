<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LblCritical.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="BtnExit.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABoAAAAaCAYAAACpSkzOAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAIbSURBVEhLvZY9S1xBGIU3bRCxzD9Q2DZpgmgXBDvLFEEsRQQJwUYIaay0EARJoYSA/0Bre3+B
        prO3CGKXkMlz5j1j7nj3uruKeeCwd855Zy7cna/eMFJKfbSJztAlurH0LE9Z3+XjQ+dZdIpGRbWz7j4a
        dNjLXYNrdIiW0AyatPQs7wipprDnYbqhaAqd5PJgG0047kQ1ri1ojCnHbVwgrtCc7ZGhz7z7ihPbNQTl
        c6nwje2xUV+PIerPiKE/vjBv+9EwxlwMlfk3QWiU2bVt68lorBgynRZD60Ro5rT+eLzXaNHNFmTv/Vih
        sVCZjX0ZWnDiyDUV+D8iTuu27sA7jijt2qrA17IQm2podYsl5xX4GxFn1mzL/x5W+one2q7A1zoTZ2po
        KxEzzluQfYySzCr6Fo95K+rcDci0qMWlGioWk84HQv4pyu64RQ/OUHLtIOJm5BcJas6jNLNjuxNqqhcN
        /XSC/GuUpd/+FSuOB0JefboHJ4MgO4iS9Au9Q1u5FSy7rAVZNRnK9D50XoG/H3H6gxZsy/+c3eCD7Qp8
        7ewiT+9hC7Z82taixfsSUXsd4dUL1mbnFoT3Ar1yswXZtB8rNBYSsQUJGs1Ndezj4T6MoeOiUK8zjOc/
        JgoEzYNv7OOCPjoeyksGH3yC8P8c5QWK7l9ONE21JqbRS9S8nGiHLrNLDL+cNKHD81+3mtC5eYG8QI+4
        QPZ6fwEKITIWhaX5fAAAAABJRU5ErkJggg==
</value>
  </data>
</root>